/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package addrec;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;



/**
 *
 * @author Miles-Laptop
 */

public class AddRec extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(AddRec.class.getName());
    private final DefaultTableModel tableModel;
      // ðŸ”¹ Load background image
    javax.swing.JPanel backgroundPanel = new javax.swing.JPanel() {
        private final java.awt.Image bg = 
            new javax.swing.ImageIcon(getClass().getResource("/images/Marvelous.jpg")).getImage();

        @Override
        protected void paintComponent(java.awt.Graphics g) {
            super.paintComponent(g);
            g.drawImage(bg, 0, 0, getWidth(), getHeight(), this);
        }
    };

    

    
    /**
     * Creates new form AddRec
     */
    public AddRec() {
    backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout()); // keep your AbsoluteLayout
    setContentPane(backgroundPanel);    
    initComponents(); // first create all Swing components
    // âœ… make sure DB and table exist
    DatabaseHelper.initDatabase();

    // âœ… setup table model with correct columns
    RECORD_TABLE.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {},
        new String [] { "ID Number", "First Name", "Last Name", "Age", "Address" }
    ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // make table read-only
        }
    });

    tableModel = (DefaultTableModel) RECORD_TABLE.getModel();

    // âœ… load database rows into table
    DatabaseHelper.loadData(tableModel);

    // start timer for clock
    javax.swing.Timer timer = new javax.swing.Timer(1000, e -> updateDateTime());
    timer.start();
    updateDateTime(); // run once immediatel
}
    

    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIDNUMBER = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        RECORD_TABLE = new javax.swing.JTable();
        btnADD = new javax.swing.JButton();
        btnEDIT = new javax.swing.JButton();
        txtADDRESS = new javax.swing.JTextField();
        txtAGE = new javax.swing.JTextField();
        txtLASTNAME = new javax.swing.JTextField();
        txtFIRSTNAME = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        SEARCH_ID = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDELETE = new javax.swing.JButton();
        btnEXIT = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MCTI_SRDB by Miles Garcia");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Address:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 220, 170, 70));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ID Number:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 170, 70));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("First Name:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 170, 70));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Last  Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 170, 70));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Age:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 170, 170, 70));

        txtIDNUMBER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDNUMBERActionPerformed(evt);
            }
        });
        getContentPane().add(txtIDNUMBER, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 250, 30));

        RECORD_TABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Number", "First Name", "Last Name", "Age", "Address"
            }
        ));
        jScrollPane1.setViewportView(RECORD_TABLE);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, 500, -1));

        btnADD.setForeground(new java.awt.Color(102, 102, 102));
        btnADD.setText("Add");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });
        getContentPane().add(btnADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 70, 20));

        btnEDIT.setForeground(new java.awt.Color(102, 102, 102));
        btnEDIT.setText("Edit");
        btnEDIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEDITActionPerformed(evt);
            }
        });
        getContentPane().add(btnEDIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, 70, 20));

        txtADDRESS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtADDRESSActionPerformed(evt);
            }
        });
        getContentPane().add(txtADDRESS, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 250, 30));

        txtAGE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAGEActionPerformed(evt);
            }
        });
        getContentPane().add(txtAGE, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 250, 30));

        txtLASTNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLASTNAMEActionPerformed(evt);
            }
        });
        getContentPane().add(txtLASTNAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 250, 30));

        txtFIRSTNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFIRSTNAMEActionPerformed(evt);
            }
        });
        getContentPane().add(txtFIRSTNAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 250, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Search ID:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 130, 50));

        SEARCH_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCH_IDActionPerformed(evt);
            }
        });
        getContentPane().add(SEARCH_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 250, 30));

        btnCancel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(102, 102, 102));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 350, 80, 20));

        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(102, 102, 102));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, -1, 20));

        btnDELETE.setForeground(new java.awt.Color(102, 102, 102));
        btnDELETE.setText("Delete");
        btnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETEActionPerformed(evt);
            }
        });
        getContentPane().add(btnDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, 80, 20));

        btnEXIT.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnEXIT.setForeground(new java.awt.Color(255, 51, 102));
        btnEXIT.setText("X");
        btnEXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEXITActionPerformed(evt);
            }
        });
        getContentPane().add(btnEXIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 80, 20));

        lblTime.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTime.setText("Time: ");
        lblTime.setAutoscrolls(true);
        getContentPane().add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, -1, -1));

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDate.setText("Date: ");
        getContentPane().add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 540, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDNUMBERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDNUMBERActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDNUMBERActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
     String id = txtIDNUMBER.getText().trim();
    String fname = txtFIRSTNAME.getText().trim();
    String lname = txtLASTNAME.getText().trim();
    String ageText = txtAGE.getText().trim();
    String address = txtADDRESS.getText().trim();

    if (id.isEmpty() || fname.isEmpty() || lname.isEmpty() || ageText.isEmpty() || address.isEmpty()) {
        JOptionPane.showMessageDialog(this, "âš  Please fill in all fields!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        Integer.parseInt(ageText); // just check age is a number
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "âš  Age must be a number!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // âœ… Correct: use insert, not update
    DatabaseHelper.insertRecord(id, fname, lname, ageText, address);
    DatabaseHelper.loadData(tableModel);
    clearFields();
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnEDITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEDITActionPerformed
     String id = txtIDNUMBER.getText().trim();
    String fname = txtFIRSTNAME.getText().trim();
    String lname = txtLASTNAME.getText().trim();
    String ageText = txtAGE.getText().trim();
    String address = txtADDRESS.getText().trim();

    if (id.isEmpty() || fname.isEmpty() || lname.isEmpty() || ageText.isEmpty() || address.isEmpty()) {
        JOptionPane.showMessageDialog(this, "âš  Please fill in all fields!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        Integer.parseInt(ageText);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "âš  Age must be a number!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    DatabaseHelper.updateRecord(id, fname, lname, ageText, address);
    DatabaseHelper.loadData(tableModel);
    clearFields();
    }//GEN-LAST:event_btnEDITActionPerformed

    private void txtADDRESSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtADDRESSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtADDRESSActionPerformed

    private void txtAGEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAGEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAGEActionPerformed

    private void txtLASTNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLASTNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLASTNAMEActionPerformed

    private void txtFIRSTNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFIRSTNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFIRSTNAMEActionPerformed

    private void SEARCH_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCH_IDActionPerformed
        // User will be search on this section
    }//GEN-LAST:event_SEARCH_IDActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
         SEARCH_ID.setText(""); // clear search field
         RECORD_TABLE.clearSelection(); // remove table highlight
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
 String searchID = SEARCH_ID.getText().trim();

    if (searchID.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter an ID Number to search.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    boolean found = false;
    for (int i = 0; i < tableModel.getRowCount(); i++) {
        String id = tableModel.getValueAt(i, 0).toString(); // column 0 = ID Number
        if (id.equalsIgnoreCase(searchID)) {
            // âœ… highlight the row
            RECORD_TABLE.setRowSelectionInterval(i, i);
            RECORD_TABLE.scrollRectToVisible(RECORD_TABLE.getCellRect(i, 0, true));

            // âœ… ask if user wants to edit the record
            int confirm = JOptionPane.showConfirmDialog(
                this,
                "Record found for ID: " + id + "\n\nDo you want to load it for editing?",
                "Confirm Edit",
                JOptionPane.YES_NO_OPTION
            );

            if (confirm == JOptionPane.YES_OPTION) {
                // âœ… load row data into text fields
                txtIDNUMBER.setText(tableModel.getValueAt(i, 0).toString());
                txtFIRSTNAME.setText(tableModel.getValueAt(i, 1).toString());
                txtLASTNAME.setText(tableModel.getValueAt(i, 2).toString());
                txtAGE.setText(tableModel.getValueAt(i, 3).toString());
                txtADDRESS.setText(tableModel.getValueAt(i, 4).toString());

                JOptionPane.showMessageDialog(this, "Record loaded into text fields for editing.");
            } else {
                JOptionPane.showMessageDialog(this, "Record highlighted but not loaded into text fields.");
            }

            found = true;
            break;
        }
    }

    if (!found) {
        JOptionPane.showMessageDialog(this, "ID Number not found!", "Search Result", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETEActionPerformed
     int row = RECORD_TABLE.getSelectedRow();
    if (row >= 0) {
        String idText = txtIDNUMBER.getText().trim();

        if (idText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "âš  Please enter/select a valid ID.");
            return;
        }

        // âœ… Pass ID as String directly
        DatabaseHelper.deleteRecord(idText);
        JOptionPane.showMessageDialog(this, "âœ… Record deleted successfully!");
        DatabaseHelper.loadData(tableModel); // refresh table
        clearFields();

    } else {
        JOptionPane.showMessageDialog(this, "âš  Please select a row to delete.");
    }

    }//GEN-LAST:event_btnDELETEActionPerformed

    private void btnEXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEXITActionPerformed
         int confirm = JOptionPane.showConfirmDialog(
            this,
            "Are you sure you want to exit?",
            "Exit Confirmation",
            JOptionPane.YES_NO_OPTION
    );

    if (confirm == JOptionPane.YES_OPTION) {
        System.exit(0); // âœ… exits the entire program
    }
    }//GEN-LAST:event_btnEXITActionPerformed
    
    private void clearFields() {
        txtIDNUMBER.setText("");
        txtFIRSTNAME.setText("");
        txtLASTNAME.setText("");
        txtAGE.setText("");
        txtADDRESS.setText("");
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        logger.log(java.util.logging.Level.SEVERE, null, ex);
    }

    java.awt.EventQueue.invokeLater(() -> new AddRec().setVisible(true));
    }
    
    private void updateDateTime() {    
    java.time.LocalDateTime now = java.time.LocalDateTime.now();
    java.time.format.DateTimeFormatter dateFormatter = java.time.format.DateTimeFormatter.ofPattern("MM-dd-yyyy");
    java.time.format.DateTimeFormatter timeFormatter = java.time.format.DateTimeFormatter.ofPattern("hh:mm:ss a"); // âœ… 12-hour with AM/PM
    lblDate.setText("Date: " + now.format(dateFormatter));
    lblTime.setText("Time: " + now.format(timeFormatter));
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable RECORD_TABLE;
    private javax.swing.JTextField SEARCH_ID;
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDELETE;
    private javax.swing.JButton btnEDIT;
    private javax.swing.JButton btnEXIT;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    private javax.swing.JTextField txtADDRESS;
    private javax.swing.JTextField txtAGE;
    private javax.swing.JTextField txtFIRSTNAME;
    private javax.swing.JTextField txtIDNUMBER;
    private javax.swing.JTextField txtLASTNAME;
    // End of variables declaration//GEN-END:variables

}
